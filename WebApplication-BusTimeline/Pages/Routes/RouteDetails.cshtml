@page
@model WebApplication_BusTimeline.Pages.Routes.RouteDetailsModel

@{
}
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
	<link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine/dist/leaflet-routing-machine.css" />
	<link rel="stylesheet" href="https://unpkg.com/leaflet-draw/dist/leaflet.draw.css" />
	<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
	<script src="https://unpkg.com/leaflet-routing-machine/dist/leaflet-routing-machine.js"></script>
	<script src="https://unpkg.com/leaflet-draw/dist/leaflet.draw.js"></script>

	<style>
		body {
			margin: 0;
			padding: 0;
			font-family: Arial, sans-serif;
		}

		.container {
			width: 100%;
			max-width: 1200px;
			margin: 0 auto;
			padding: 5px;
			box-sizing: border-box;
		}

	</style>
</head>

<div style="float: left; width: 40%">
<div class="row">
	
		@if (Model.RouteWithStops != null)
		{
			<div class="mb-2" style="width:375px">
				<div class="row">
					<h4><span>Dodajte novu stanicu na rutu: </span> <span class="fw-bold">@Model.RouteWithStops.Name</span></h4>
				</div>
			</div >
		}

<div>
	<form method="post" onsubmit="OnPostNewStanica()">
			<div class="mb-1">
			Stanica:

					<select id="SelStanicaId" asp-for="SelStanicaId" required asp-items="@Model.StanicaList" style="margin-left:100px;">
					<option value="" disabled selected>Izaberite stanicu</option>

					</select>
			</div>

			<div class="mb-1">
			Pozicija stanice:

				<select id="SelPozicijaId" asp-for="SelPozicijaId" required style="margin-left:45px;">
				<option value="1">Prva stanica</option>
				<option value="2">Pre izabrane stanice</option>
				<option value="3">Posle izabrane stanice</option>
				<option value="4">Poslednja stanica</option>
				</select  >
			</div>

			<div class="mb-1">
					Minuta od prethodne: <input type="number" required min="0" asp-for="TimeInterval" />
			</div>
			<div class="mb-2">
					Metara od prethodne: <input type="number" required min="0" asp-for="MetarDistance" />
			</div>

				<div style="text-align: center;" class="col-md-7" >
					<div class="mb-3">
						<button type="submit" value="Dodaj" style="text-align:center; background-color:#cfe2ff ">Dodaj</button>
					</div>
				</div>
			

		<input type="hidden" id="RouteId" asp-for="RouteId" value="@Model?.RouteWithStops?.Id"/>
		<input type="hidden" id="SelectRbr" asp-for="SelectRbr" value="@Model?.SelectRbr"/>

	</form>

</div>
	
	<div class="col-md-10">
		<div class="mb-3">
			<h4>Stanice na liniji:</h4>
		</div>
			
		<div class="row" >
			<div class="row-col-4">
				<div class="mb-3">
		
			<table class="table">
				<thead class="table-primary">
					<tr>
						
						<th></th>
						<th></th>
						<th style="text-align:center">Redni broj</th>
						<th style="text-align:center">Stanica</th>
					</tr>
				</thead>
				<tbody>
					

					@foreach (var s in Model.RouteWithStops.Stops.OrderBy(x => x.Rbr))
					{
										
						<tr class="@(s.Rbr.ToString() == Model.SelectRbr ? "table-primary" : "table-secondary")">													
							<td style="text-align:center">
								<a href=@($"https://localhost:7292/Routes/RouteDetails?routeId={Model.RouteWithStops.Id}&StanicaRbr={s.Rbr}")>
									<button class="btn btn-primary" style="background-color:white; width:40px; height:40px; display: flex; align-items: center; justify-content: center;">
													<svg width="104px" height="104px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g id="Warning / Info"> <path id="Vector" d="M12 11V16M12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21ZM12.0498 8V8.1L11.9502 8.1002V8H12.0498Z" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path> </g> </g></svg>
												</button>
								</a>
							</td>
							<td>
											<form method="post" asp-page-handler="DeleteRouteStop" asp-route-routeId="@Model?.RouteWithStops?.Id" asp-route-stanicaId="@s?.Id" asp-route-Rbr="@s?.Rbr">
									<button class="btn btn-primary" style="background-color:white; width:40px; height:40px; display: flex; align-items: center; justify-content: center;">
										<svg width="40px" height="40px" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path fill="#000000" d="M352 192V95.936a32 32 0 0 1 32-32h256a32 32 0 0 1 32 32V192h256a32 32 0 1 1 0 64H96a32 32 0 0 1 0-64h256zm64 0h192v-64H416v64zM192 960a32 32 0 0 1-32-32V256h704v672a32 32 0 0 1-32 32H192zm224-192a32 32 0 0 0 32-32V416a32 32 0 0 0-64 0v320a32 32 0 0 0 32 32zm192 0a32 32 0 0 0 32-32V416a32 32 0 0 0-64 0v320a32 32 0 0 0 32 32z"></path></g></svg>
									</button>
								</form>
							</td>
							<td style="text-align:center">@s.Rbr</td>
							<td style="text-align:center">@s.Stop.Name</td>
															
						</tr>
										
					}
				</tbody>

			</table>
		
				</div>
			</div>
		</div>

	</div>

	</div>

	<a href="../Routes/RoutesView2">Nazad</a>
</div>



<div style="float: right; width: 60%">


<div class="row">
	

	<div id="map" style="height: 600px; width=100%"></div>

	<script>
		var map = L.map('map').setView([44.968190, 19.608141], 13);
		L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
			maxZoom: 19,
		}).addTo(map);

		var coordinates = [];
		var markers = [];
		var colorr; 
		var orderedStops = [];


		

			@if (Model.Shapes != null)
			{
				@for (int i = 0; i < Model.Shapes?.Count(); i++)
				{
					@:coordinates.push({ lat: "@Model.Shapes[i].Lat.ToString().Replace(',','.')", lon: "@Model.Shapes[i].Lon.ToString().Replace(',','.')" });
				}
			}

			@if(Model.RouteWithStops.Stops != null)
			{
				@for(int i = 0; i<Model.RouteWithStops.Stops?.Count(); i++)
				{
					@:markers.push({ lat: "@Model.RouteWithStops.Stops[i].Stop.Lat.ToString().Replace(',','.')", lon: "@Model.RouteWithStops.Stops[i].Stop.Lon.ToString().Replace(',','.')" })
					@:colorr = '@Model.RouteWithStops.Color';

				
				}
			}

				console.log(orderedStops);


			for (var i = 0; i < markers.length; i++) {
				var marker = L.marker([markers[i].lat, markers[i].lon]).addTo(map);
			}


			var waypoints = markers.map(function (marker) {
				return L.latLng(marker.lat, marker.lon);
			});

			L.Routing.control({
				waypoints: waypoints,
				routeWhileDragging: true,
				lineOptions: {
					styles: [{ color: colorr, opacity: 1, weight: 4 }]
				},
				show: false,
			}).addTo(map);



	</script>

	</div>

</div>


